Stage 6:
    -Converted db connection to a function that returns new PDO to get rid of hanging $pdo variable
    -Moved the select all contacts to its model class and created it as a static method so that it can be called anywhere without instantiating(creating an object) of the class.
    -Refactored index.php to use this static method.
    -Created a find contact-contact-by-id static method in the model class and used it in edit.php and delete.php
Stage 7:
    -Refactored Create contact process, Edit contact process and Delete contact process to static methods in the class and used them in the controllers
    -Created a helper_functions file with a redirect-to-index function and implemented this function across all controller files.
Stage 8:
    -Created a dedicated Connection class in a new database directory with a connect() static function and implemented this everywhere.
Stage 9:
    -Used object instantiation in the create-contact process
Stage 10:
    -Moved css, js and img folders to a new assets folder to make the folder structure more tidy
    -created a config file in the index to hold database and other config information as an assoc array
    -Deleted db_config file in helpers as it's been replaced with a general config file in directory index
    -Moved the database and helpers folders to a new framework folder that would hold the code for our mini framework
    -Created a QueryBuilder class in framework/database for handling database queries in all models and classes
    -Created a selectAll function in query builder and implemented in index.php
    -deleted the fetchAll method in contact model class as we don't need it anymore.
Stage 11:
    -moved create, delete, edit back to the index cos I want to create a bootstrap file responsible for general requires
    -created bootstrap file and moved general requires to it, requiring only it in the controller files.
    -I'll still move the controller files back to controller folder, but for now, it's easier for me to work with them in index as I don't want to have issues with requires.
    -Implemented database config information in Connection::connect() and in bootstrap file
    -Moved creation logic from the Contact model class back to create.php and used prepared statement to create a new contact
Stage 12:
    -moved the insert query into the QueryBuilder as a function and implemented in create.php


